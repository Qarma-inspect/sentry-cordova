{"version":3,"file":"options.js","sourceRoot":"","sources":["../../src/js/options.ts"],"names":[],"mappings":"","sourcesContent":["import type { BrowserOptions } from '@sentry/browser';\n\n/**\n * Configuration options for the Sentry Cordova SDK.\n * @see CordovaFrontend for more information.\n */\nexport interface CordovaOptions\n  extends Omit<BrowserOptions, 'autoSessionTracking'> {\n  /**\n   * Enables crash reporting for native crashes.\n   * Defaults to `true`.\n   */\n  enableNative?: boolean;\n\n  /** Should the native nagger alert be shown or not. */\n  enableNativeNagger?: boolean;\n\n  /**\n   * Should sessions be tracked to Sentry Health or not.\n   * Defaults to `true`.\n   *\n   * NOTE: Currently only supported on Android and iOS. Browser not yet supported.\n   */\n  enableAutoSessionTracking?: boolean;\n\n  /** The interval to end a session if the App goes to the background. */\n  sessionTrackingIntervalMillis?: number;\n\n  /** Enable scope sync from Java to NDK on Android */\n  enableNdkScopeSync?: boolean;\n\n  /** When enabled, all the threads are automatically attached to all logged events on Android */\n  attachThreads?: boolean;\n\n  /**\n  * Enables Out of Memory Tracking for iOS and macCatalyst.\n  * See the following link for more information and possible restrictions:\n  * https://docs.sentry.io/platforms/apple/guides/ios/configuration/out-of-memory/\n  *\n  * @default true\n  * */\n  enableWatchdogTerminationTracking?: boolean;\n\n  /**\n  * Enables Out of Memory Tracking for iOS and macCatalyst.\n  * See the following link for more information and possible restrictions:\n  * https://docs.sentry.io/platforms/apple/guides/ios/configuration/out-of-memory/\n  *\n  * @default true\n  * @deprecated The method will be removed on a major update, instead, use enableWatchdogTerminationTracking for the same result.\n  * */\n  enableOutOfMemoryTracking?: boolean;\n\n /**\n  * When enabled, the SDK tracks when the application stops responding for a specific amount of\n  * time defined by the `appHangTimeoutInterval` option.\n  *\n  * iOS only\n  *\n  * @default true\n  */\n enableAppHangTracking?: boolean;\n\n /**\n  * The minimum amount of time an app should be unresponsive to be classified as an App Hanging.\n  * The actual amount may be a little longer.\n  * Avoid using values lower than 100ms, which may cause a lot of app hangs events being transmitted.\n  * Value should be in seconds.\n  *\n  * iOS only\n  *\n  * @default 2\n  */\n appHangTimeoutInterval?: number;\n}\n"]}