{"version":3,"file":"sdk.js","sourceRoot":"","sources":["../../src/js/sdk.ts"],"names":[],"mappings":";;;AAAA,2CAAoF;AACpF,qCAA0D;AAC1D,uCAAgD;AAGhD,mCAAyC;AACzC,+CAAyC;AACzC,iCAAuC;AACvC,qCAAmC;AAEnC,IAAM,oBAAoB,oBAAO,6BAA0B,GAAE,IAAI,sBAAO,EAAE,EAAC,CAAC;AAE5E,IAAM,eAAe,GAAmB;IACtC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,oBAAoB;IACzC,yBAAyB,EAAE,IAAI;IAC/B,kBAAkB,EAAE,KAAK;IACzB,aAAa,EAAE,KAAK;CACrB,CAAC;AAEF;;GAEG;AACH,SAAgB,IAAI,CAAC,QAAiC;;IACpD,8DAA8D;IAC9D,IAAM,MAAM,GAAG,uBAAe,EAAwC,CAAC;IAEvE,IAAM,OAAO,0DACR,eAAe,KAClB,OAAO,QAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,cAAc,0CAAE,EAAE,KAChC,QAAQ,CACZ,CAAC;IAEF,wDAAwD;IACxD,IAAM,UAAU,GAAG,IAAI,UAAG,CAAC,SAAS,EAAE,IAAI,oBAAY,EAAE,CAAC,CAAC;IAC1D,eAAQ,CAAC,UAAU,CAAC,CAAC;IAErB,kBAAW,CAAC,sBAAa,EAAE,OAAO,CAAC,CAAC;AACtC,CAAC;AAfD,oBAeC;AAED;;;GAGG;AACH,SAAgB,WAAW;IACzB,IAAI,gBAAM,CAAC,uBAAuB,EAAE,EAAE;QACpC,gBAAM,CAAC,KAAK,EAAE,CAAC;KAChB;AACH,CAAC;AAJD,kCAIC","sourcesContent":["import { defaultIntegrations as defaultBrowserIntegrations } from '@sentry/browser';\nimport { Hub, initAndBind, makeMain } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport { CordovaOptions } from './backend';\nimport { CordovaClient } from './client';\nimport { Cordova } from './integrations';\nimport { CordovaScope } from './scope';\nimport { NATIVE } from './wrapper';\n\nconst DEFAULT_INTEGRATIONS = [...defaultBrowserIntegrations, new Cordova()];\n\nconst DEFAULT_OPTIONS: CordovaOptions = {\n  enableNative: true,\n  defaultIntegrations: DEFAULT_INTEGRATIONS,\n  enableAutoSessionTracking: true,\n  enableNdkScopeSync: false,\n  attachThreads: false,\n};\n\n/**\n * Inits the SDK\n */\nexport function init(_options: Partial<CordovaOptions>): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const window = getGlobalObject<{ SENTRY_RELEASE?: { id?: string } }>();\n\n  const options = {\n    ...DEFAULT_OPTIONS,\n    release: window?.SENTRY_RELEASE?.id,\n    ..._options,\n  };\n\n  // Initialize a new hub using our scope with native sync\n  const cordovaHub = new Hub(undefined, new CordovaScope());\n  makeMain(cordovaHub);\n\n  initAndBind(CordovaClient, options);\n}\n\n/**\n * If native client is available it will trigger a native crash.\n * Use this only for testing purposes.\n */\nexport function nativeCrash(): void {\n  if (NATIVE.isNativeClientAvailable()) {\n    NATIVE.crash();\n  }\n}\n"]}